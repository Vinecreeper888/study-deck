{"version":3,"sources":["services/cardService.js","components/CardForm.js","components/CardPreview.js","components/CardList.js","components/Practice.js","App.js","reportWebVitals.js","index.js"],"names":["saveCard","card","id","fetch","method","headers","body","JSON","stringify","then","res","json","updateCard","createCard","CardForm","onSave","onCancel","undefined","React","useState","term","setTerm","definition","setDef","clearForm","className","onReset","onSubmit","event","preventDefault","htmlFor","value","onChange","target","type","CardPreview","onRemove","onUpdate","isEditMode","setIsEditMode","handleToggleEdit","current","View","onEdit","isFront","setIsFront","onClick","window","confirm","destroyCard","CardList","cards","onAdd","to","map","Practice","state","currentIndex","handleCardFlip","setState","handleNextCard","props","length","handlePrevCard","this","class","Component","App","setCards","useEffect","path","existing","c","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d190699.chunk.js","sourcesContent":["export function getCards() {\n    return fetch(\"/api/card\").then(res => res.json())\n}\n\nexport function destroyCard(id) {\n    return fetch(`/api/card/${id}`,{method: 'DELETE'})\n}\n\nexport function saveCard(card) {\n    return card.id ? updateCard(card) : createCard(card)\n}\n\nexport function createCard(card) {\n    return fetch('/api/card', {\n        method: 'POST',\n        headers: {\n            'Content-type':'application/json'\n        },\n        body: JSON.stringify(card)\n    }).then(res => res.json())\n}\n\nexport function updateCard(card) {\n    return fetch(`/api/card/${card.id}`, {\n        method: 'PUT',\n        headers: {\n            'Content-type':'application/json'\n        },\n        body: JSON.stringify(card)\n    }).then(res => res.json())\n}","import React from 'react';\nimport {saveCard} from '../services/cardService';\n\nexport function CardForm({onSave, onCancel, card}) {\n    const id = card && card.id ? card.id : undefined\n    \n    const [term, setTerm] = React.useState(id ? card.term : '');\n    const [definition, setDef] = React.useState(id ? card.definition : '');\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        //call an api to save\n        saveCard({term, definition, id }).then(card => {\n            clearForm()\n            //send data back up to \n            //notify parent component\n            onSave && typeof onSave === 'function' && onSave(card)\n        })\n    }\n\n\n    function clearForm() {\n        setTerm('')\n        setDef('')\n        onCancel && typeof onCancel === 'function' && onCancel()\n    }\n\n    function handleTermChange(event) {\n        const {value} = event.target\n        setTerm(value);\n    }\n\n    function handleDefChange(event) {\n        const {value} = event.target\n        setDef(value);\n    }\n\n    return (\n        <div className=\"tile\">\n            <h4>{id ? 'Update Card' : 'Add Card'}</h4>\n            <form onReset={clearForm} onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor={`card_term_${id ? id : 'new'}`}>term</label>\n                    <textarea id={`card_term_${id ? id : 'new'}`} value={term} onChange={handleTermChange}/>\n                </div>\n                <div>\n                    <label htmlFor={`card_definition_${id ? id : 'new'}`}>definition</label>\n                    <textarea id={`card_term_${id ? id : 'new'}`} value={definition} onChange={handleDefChange}/>\n                </div>\n                <div className=\"buttons\">\n                    <button type=\"submit\" className=\"primary\">Save</button>\n                    <button type=\"reset\" className=\"secondary\">Cancel</button>\n                </div>\n            </form>\n        </div>\n    );\n}","import React from 'react';\nimport {destroyCard} from '../services/cardService'\nimport {CardForm} from './CardForm';\n\nexport function CardPreview({onRemove, onUpdate, ...card}) {\n    const [isEditMode, setIsEditMode] = React.useState(false);\n    function handleToggleEdit() {\n        setIsEditMode(current => !current)\n    }\n    return isEditMode ? (\n        <CardForm onCancel={handleToggleEdit} onSave={onUpdate} card={card}/>\n    ) : (\n        <View {...card} onEdit={handleToggleEdit} onRemove={onRemove}/>\n    )\n}\n\nexport function View({id,term,definition, onEdit, onRemove}) {\n    const [isFront, setIsFront] = React.useState(true)\n    \n    function handleCardFlip() {\n        setIsFront(current => !current);\n    }\n\n    function handleDelete() {\n        const confirm = window.confirm(`Are you sure you wish to delete \"${term}\"`)\n        if(confirm) {\n            destroyCard(id).then(() => {\n                onRemove && \n                    typeof onRemove === 'function' &&\n                    onRemove(id)\n            })\n        }\n    }\n\n    return(\n        <div className={`tile ${isFront ? '' : 'back'}`}>\n            {/* contain all flashcards */}\n            <h4 className=\"cardTerm\">{isFront ? term: definition}</h4>\n            <div className=\"cardButtons\">\n              <button type=\"button\" className=\"tertiary\" onClick={handleCardFlip}>{isFront ? 'Show Back' : 'Show Front'}</button>\n              <div>\n                <button type=\"button\" className=\"secondary\" onClick={onEdit}>Edit</button>\n                <button type=\"button\" className=\"secondary danger\" onClick={handleDelete}>Delete</button>\n              </div>\n            </div>\n          </div>\n    );\n};","import React from 'react';\nimport {CardForm} from './CardForm';\nimport {CardPreview} from './CardPreview';\nimport {Link} from '@reach/router'\n\nexport function CardList({cards, onAdd, onRemove, onUpdate}) {\n    return (\n        <div>\n            <h3>Your Cards</h3>\n            <div className=\"practiceCTA\">\n                <Link to=\"/practice\">Practice Deck</Link>\n            </div>\n            <div className=\"gridContainer\">\n            <CardForm onSave={onAdd}/>\n            {cards.map((card) => (\n                <CardPreview\n                key={card.id} \n                {...card}\n                onUpdate={onUpdate}\n                onRemove={onRemove} \n                />\n            ))}\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nexport class Practice extends React.Component {\n    state = {\n        currentIndex: 0,\n        isFront: true\n    }\n\n    handleCardFlip = () => {\n        this.setState(state => ({isFront: !state.isFront}))\n    }\n\n    handleNextCard = () => {\n        const {cards} = this.props\n        this.setState(state => ({currentIndex: (state.currentIndex + 1) % cards.length}))\n    }\n\n    handlePrevCard = () => {\n        const {cards} = this.props\n        this.setState(state => ({currentIndex: (state.currentIndex - 1 + cards.length) % cards.length}))\n    }\n\n    render() {\n        const {cards} = this.props\n        const {currentIndex, isFront} = this.state\n        const {term = '', definition=''} = cards && cards.length && cards[currentIndex]\n        return (\n            <div className=\"practiceContainer\">\n                <h3>Practice</h3>\n                <div className=\"progress\">{currentIndex + 1}/{cards.length}</div>\n                <div className=\"card\">\n                    <div class=\"practiceTerm\">{isFront ? term : definition}</div>\n                    <div className=\"practiceButtons\">\n                        <button type=\"button\" className=\"tertiary\" onClick={this.handleCardFlip}>\n                            {isFront ? 'Show Back' : 'Show Front'}\n                        </button>\n                        <div>\n                            <button type=\"button\" className=\"secondary\" onClick={this.handlePrevCard}>\n                                previous\n                            </button>\n                            <button type=\"button\" class=\"primary\" onClick={this.handleNextCard}>\n                                next\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './normalize.css';\nimport {getCards} from './services/cardService';\nimport {CardList} from './components/CardList';\nimport {Router} from '@reach/router'\nimport {Practice} from './components/Practice';\n\n\nfunction App() {\n  const [cards, setCards] = React.useState([]);\n  React.useEffect(() => {\n    getCards().then(setCards)\n  }, [])\n  function handleRemove(id) {\n    setCards(existing => existing.filter(c => c.id !== id))\n  }\n\n  function handleAdd(card) {\n    setCards(existing => [...existing, card])\n  }\n\n  function handleUpdate(card) {\n    setCards(existing => existing.map(c => c.id === card.id ? card : c))\n  }\n\n  return (\n    <div>\n      <header>\n        <h1>Study<span className=\"titleHighlight\">Deck</span></h1>\n        <h2>Retention through repitition</h2>\n      </header>\n      <main>\n      <Router>\n        <CardList\n          path=\"/\"\n          cards={cards}\n          onAdd={handleAdd} \n          onUpdate={handleUpdate} \n          onRemove={handleRemove}\n        />\n        <Practice path=\"/practice\" cards={cards}/>\n      </Router>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}